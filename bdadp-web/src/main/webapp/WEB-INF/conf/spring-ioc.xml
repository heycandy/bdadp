<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

  <!-- BoneCP configuration -->
  <bean id="dataSource" class="${bonecp.pool.dataSourceClassName}">
    <property name="driverClass" value="${database.driverClassName}"/>
    <property name="jdbcUrl" value="${database.jdbcUrl}"/>
    <property name="username" value="${database.username}"/>
    <property name="password" value="${database.password}"/>
    <property name="idleConnectionTestPeriodInMinutes"
      value="${bonecp.pool.idleConnectionTestPeriodInMinutes}"/>
    <property name="idleMaxAgeInMinutes" value="${bonecp.pool.idleMaxAgeInMinutes}"/>
    <property name="maxConnectionsPerPartition" value="${bonecp.pool.maxConnectionsPerPartition}"/>
    <property name="minConnectionsPerPartition" value="${bonecp.pool.minConnectionsPerPartition}"/>
    <property name="partitionCount" value="${bonecp.pool.partitionCount}"/>
    <property name="acquireIncrement" value="${bonecp.pool.acquireIncrement}"/>
    <property name="statementsCacheSize" value="${bonecp.pool.statementsCacheSize}"/>
  </bean>

  <!-- jdbcTemplate -->
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!-- entityManagerFactory -->
  <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    id="entityManagerFactory">
    <property name="dataSource" ref="dataSource"/>
    <property name="packagesToScan" value="com.chinasofti.ark.bdadp.entity"/>
    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
    </property>
    <property name="jpaProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
        <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
        <prop key="hibernate.hibernate.connection.SetBigStringTryClob">
          ${hibernate.connection.SetBigStringTryClob}
        </prop>
        <prop key="hibernate.hibernate.archive.autodetection">
          ${hibernate.archive.autodetection}
        </prop>
        <prop key="hibernate.hibernate.connection.charSet">
          ${hibernate.connection.charSet}
        </prop>
        <prop key="hibernate.hibernate.cache.use_query_cache">
          ${hibernate.cache.use_query_cache}
        </prop>
        <prop key="hibernate.hibernate.cache.use_second_level_cache">
          ${hibernate.cache.use_second_level_cache}
        </prop>
        <prop key="hibernate.hibernate.ejb.naming_strategy">
          ${hibernate.ejb.naming_strategy}
        </prop>
      </props>
    </property>
  </bean>

  <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory"/>
  </bean>

  <!-- persistenceExceptionTranslationPostProcessor -->
  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
    id="persistenceExceptionTranslationPostProcessor"/>

  <!-- pushService -->
  <bean class="com.chinasofti.ark.bdadp.service.push.impl.PushServiceImpl"
    id="pushService">
    <property name="initProperties">
      <props>
        <prop key="hostname">${push.service.hostname}</prop>
        <prop key="port">${push.service.port}</prop>
      </props>
    </property>
  </bean>

  <!-- componentService -->
  <bean class="com.chinasofti.ark.bdadp.service.components.impl.ComponentServiceImpl"
    id="componentService">
    <property name="initProperties">
      <props>
        <prop key="path">${component.service.path}</prop>
      </props>
    </property>
  </bean>

  <!-- executorService -->
  <bean id="executorService"
    class="com.chinasofti.ark.bdadp.service.flow.impl.SimpleFlowExecutorService"/>

  <!-- executorService -->
  <bean id="scenarioService"
    class="com.chinasofti.ark.bdadp.service.scenario.impl.ScenarioExecutorServiceImpl$Channel"/>

  <!-- visualService -->
  <!--  for mysql -->
  <bean id="visualService"
        class="com.chinasofti.ark.bdadp.service.visual.impl.ScenarioVisualServiceImpl"/>
  <!--  for oracle -->
  <!--<bean id="visualService"-->
  <!--class="com.chinasofti.ark.bdadp.service.visual.impl.ScenarioVisualServiceOracleImpl"/>-->

  <!-- Hive jdbcConnPool -->
  <!--<bean id="jdbcConnPool" class="com.chinasofti.ark.bdadp.util.jdbc.pool.JDBCConnPool"/>-->

  <context:annotation-config/>
  <context:component-scan base-package="com.chinasofti.ark.bdadp.service">
    <!--<context:exclude-filter expression="com.chinasofti.ark.bdadp.service.tools.HbaseInfoService"-->
    <!--type="assignable"/>-->
    <!--<context:exclude-filter expression="com.chinasofti.ark.bdadp.service.tools.HdfsInfoService"-->
    <!--type="assignable"/>-->
    <!--<context:exclude-filter expression="com.chinasofti.ark.bdadp.service.tools.HiveInfoService"-->
    <!--type="assignable"/>-->
  </context:component-scan>

  <aop:config expose-proxy="true">
    <aop:pointcut expression="execution(* com.chinasofti.ark.bdadp.service..*.*(..))"
      id="txPointcut"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
  </aop:config>

  <!-- txAdvice -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="*" propagation="REQUIRED"/>
    </tx:attributes>
  </tx:advice>

  <jpa:repositories base-package="com.chinasofti.ark.bdadp.dao"/>

  <!--orm-->
  <!--<beans profile="local">
    <context:property-placeholder location="/WEB-INF/local-orm.properties"/>
  </beans>

  <beans profile="dev">
    <context:property-placeholder location="/WEB-INF/dev-orm.properties"/>
  </beans>

  <beans profile="test">
    <context:property-placeholder location="/WEB-INF/test-orm.properties"/>
  </beans>

  <beans profile="prod">
    <context:property-placeholder location="/WEB-INF/prod-orm.properties"/>
  </beans>-->
  <!--orm-->
  <context:property-placeholder location="/WEB-INF/orm.properties"/>
  <!--Decrypt orm-->
  <!--<bean class="com.chinasofti.ark.bdadp.util.common.DecryptPropertyPlaceholderConfigurer">-->
  <!--<property name="ignoreUnresolvablePlaceholders" value="true"></property>-->
  <!--<property name="locations">-->
  <!--<list>-->
  <!--<value>/WEB-INF/local-orm.properties</value>-->
  <!--</list>-->
  <!--</property>-->
  <!--</bean>-->
</beans>
